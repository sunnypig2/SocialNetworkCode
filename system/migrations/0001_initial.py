# Generated by Django 2.1.1 on 2018-09-20 07:20

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accountsinformation',
            fields=[
                ('idaccount', models.AutoField(db_column='idAccount', primary_key=True, serialize=False)),
                ('idperson', models.IntegerField(blank=True, db_column='IdPerson', null=True)),
                ('media', models.CharField(blank=True, db_column='Media', max_length=16, null=True)),
                ('headportrait', models.CharField(blank=True, db_column='HeadPortrait', max_length=45, null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=45, null=True)),
                ('createtime', models.DateTimeField(blank=True, db_column='CreateTime', null=True)),
                ('follownumber', models.IntegerField(blank=True, db_column='FollowNumber', null=True)),
                ('fansnumber', models.IntegerField(blank=True, db_column='FansNumber', null=True)),
                ('tweetsnumber', models.IntegerField(blank=True, db_column='TweetsNumber', null=True)),
                ('lasttweettime', models.DateField(blank=True, db_column='LastTweetTime', null=True)),
                ('userlocation', models.CharField(blank=True, db_column='UserLocation', max_length=16, null=True)),
                ('severity', models.DecimalField(blank=True, db_column='Severity', decimal_places=2, max_digits=4, null=True)),
            ],
            options={
                'verbose_name': '账号信息',
                'verbose_name_plural': '账号信息',
                'db_table': 'accountsinformation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Friendcircle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media', models.CharField(db_column='media', max_length=255, null=True)),
                ('name', models.CharField(db_column='name', max_length=255, null=True)),
                ('to_name', models.CharField(db_column='to_name', max_length=255)),
                ('relation', models.CharField(db_column='relation', max_length=255)),
            ],
            options={
                'verbose_name': '朋友圈',
                'verbose_name_plural': '朋友圈',
                'db_table': 'friend_circle',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lifetimelist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personnumber', models.IntegerField(blank=True, db_column='PersonNumber', null=True)),
                ('time', models.DateField(blank=True, db_column='Time', null=True)),
                ('introduction', models.CharField(blank=True, db_column='Introduction', max_length=45, null=True)),
            ],
            options={
                'db_table': 'lifetimelist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LogIn',
            fields=[
                ('iduser', models.AutoField(db_column='IdUser', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'log_in',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sensitiveevent',
            fields=[
                ('sensitivevent', models.CharField(blank=True, db_column='SensitivEvent', max_length=45, null=True)),
                ('idsensitivevent', models.IntegerField(db_column='IdSensitivEvent', primary_key=True, serialize=False)),
                ('tweetsnum', models.IntegerField(blank=True, db_column='TweetsNum', null=True)),
                ('date', models.DateField(blank=True, db_column='Date', null=True)),
                ('content', models.TextField(blank=True, db_column='content')),
                ('sensitivity', models.DecimalField(blank=True, db_column='Sensitivity', decimal_places=2, max_digits=4, null=True)),
                ('hot', models.DecimalField(blank=True, db_column='Hot', decimal_places=2, max_digits=4, null=True)),
                ('respondnumber', models.IntegerField(blank=True, db_column='RespondNumber', null=True)),
                ('commentnumber', models.IntegerField(blank=True, db_column='CommentNumber', null=True)),
                ('sensitivewords', models.CharField(blank=True, db_column='SensitiveWords', max_length=45, null=True)),
                ('warning', models.DecimalField(blank=True, db_column='Warning', decimal_places=2, max_digits=4, null=True)),
            ],
            options={
                'db_table': 'sensitiveevent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Supversiedpersonlist',
            fields=[
                ('idperson', models.IntegerField(db_column='IdPerson', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=16)),
                ('gender', models.CharField(blank=True, db_column='Gender', max_length=2, null=True)),
                ('age', models.IntegerField(blank=True, db_column='Age', null=True)),
                ('tweetsnumber', models.IntegerField(blank=True, db_column='TweetsNumber', null=True)),
                ('userlocation', models.CharField(blank=True, db_column='UserLocation', max_length=16, null=True)),
                ('lasttweetstime', models.DateField(blank=True, db_column='LastTweetsTime', null=True)),
                ('hot', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': '监控用户',
                'verbose_name_plural': '监控用户',
                'db_table': 'supversiedpersonlist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Twieetslists',
            fields=[
                ('idtweets', models.IntegerField(db_column='IdTweets', primary_key=True, serialize=False)),
                ('idperson', models.IntegerField(blank=True, db_column='IdPerson', null=True)),
                ('mediasource', models.CharField(blank=True, db_column='MediaSource', max_length=16, null=True)),
                ('tweets', models.CharField(blank=True, db_column='Tweets', max_length=45, null=True)),
                ('keywords', models.CharField(blank=True, db_column='keyWords', max_length=45, null=True)),
                ('useraccounts', models.CharField(blank=True, db_column='UserAccounts', max_length=45, null=True)),
                ('transpond', models.IntegerField(blank=True, db_column='Transpond', null=True)),
                ('likes', models.IntegerField(blank=True, db_column='Likes', null=True)),
                ('comments', models.IntegerField(blank=True, db_column='Comments', null=True)),
                ('time', models.DateField(blank=True, db_column='Time', null=True)),
                ('origin', models.CharField(blank=True, db_column='Origin', max_length=16, null=True)),
                ('contextrange', models.CharField(blank=True, db_column='ContextRange', max_length=16, null=True)),
                ('tweetsdetails', models.TextField(blank=True, db_column='TweetsDetails', null=True)),
                ('idsensitivevent', models.IntegerField(blank=True, db_column='IdSensitivevent', null=True)),
                ('warning', models.IntegerField(blank=True, db_column='Warning', null=True)),
            ],
            options={
                'verbose_name': '推文列表',
                'verbose_name_plural': '推文列表',
                'db_table': 'twieetslists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usersensitivewords',
            fields=[
                ('sensitivevent', models.CharField(max_length=45)),
                ('user', models.CharField(max_length=45)),
                ('words', models.CharField(max_length=255)),
                ('idwords', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'usersensitivewords',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Wordstopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idperson', models.IntegerField(blank=True, db_column='IdPerson', null=True)),
                ('time', models.DateField(blank=True, db_column='Time', null=True)),
                ('userspeech', models.CharField(blank=True, db_column='UserSpeech', max_length=45, null=True)),
                ('speechsource', models.CharField(blank=True, db_column='SpeechSource', max_length=45, null=True)),
            ],
            options={
                'db_table': 'wordstopic',
                'managed': False,
            },
        ),
    ]
