<!DOCTYPE html>
<html lang="en">
{% load staticfiles %}
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="stylesheet" href="{% static 'css/main_demo.css' %}">
<title>天鹰监测系统</title>
</head>
<body>
<div style="width: 1300px;margin: auto;">
    <header style="background-color: #547ca5;height: 100px;vertical-align: center;">
        <img src="/static/img/eagle.jpg" height="100px" width="120px">
        <h2 style="text-align: center;margin-top: -60px;">天鹰监测系统</h2>
        <span style="position:relative;float: right;bottom: 30px;right: 20px;">
        <span ><a href="{% url 'socialNetworkCode:logout' %}" style="color: black;" >Logout</a></span>
        </span>
    </header>
        <br><br>

    <div style="float: left;">
        <div class="navigate" style="background-color: #F9FAFB;">
            <ul class="">
                <li><a href="/socialNetworkCode/newgn" >监测信息表</a></li>
                <li><a href="javascript:void(0);"  ><b>用户划分</b></a></li>
                <li><a href="javascript:void(0);"  ><b>|-社区划分</b></a></li>
                <li><a href="javascript:void(0);"  >|-兴趣划分</a></li>

            </ul>
        </div>

        <br><br>




        <div class="navigate" style="background-color: #F9FAFB;">
            <ul class="">
                <li><a href="javascript:void(0);" ><b>分析结果</b></a></li>
                <li><a href="javascript:void(0);" ><b>同社区关系</b></a></li>

                <li id="spread" class="param" style="color:#4183C4;font-size: 16px;padding:7px 55px;display: block;width: 100px;">影响力</li>
                <li id="spread_num" class="param" style="color:#4183C4;font-size: 16px;padding:7px 55px;display: block;width: 100px;">影响力因子</li>

{#                <li id="sort" class="param" style="color:#4183C4;font-size: 16px;padding:7px 55px;display: block;width: 100px;">派系分析</li>#}
{#                <li id="part" class="param" style="color:#4183C4;font-size: 16px;padding:7px 55px;display: block;width: 100px;">成分分析</li>#}
                <li id="gn" class="param" style="color:#4183C4;font-size: 16px;padding:7px 55px;display: block;width: 100px;">社区划分</li>

                <li><a href="javascript:void(0);" ><b>全网络关系</b></a></li>
                <li id="all_modul" class="param" style="color:#4183C4;font-size: 16px;padding:7px 55px;display: block;width: 100px;">最大模块度</li>
                <li id="gn_num" class="param" style="color:#4183C4;font-size: 16px;padding:7px 55px;display: block;width: 100px;">社区数量</li>

                <li><a href="javascript:void(0);" ><b>参数下关系</b></a></li>
                <li id="param_modul" class="param" style="color:#4183C4;font-size: 16px;padding:7px 55px;display: block;width: 100px;">最大模块度</li>
                <li id="param_gn_num" class="param" style="color:#4183C4;font-size: 16px;padding:7px 55px;display: block;width: 100px;">社区数量</li>


            </ul>
        </div>
        <br><br>

        <div class="navigate" style="background-color: #F9FAFB;">
            <ul class="">
                <li><a href="{% url 'socialNetworkCode:demo'  1 1 %}" ><b>参数控制</b></a></li>
                <li><a href="" onclick='return selectParam("gender")' >性别</a></li>
                <li><a href="" onclick='return selectParam("province");' >省份</a></li>

            </ul>
        </div>


    </div>



    <div class="content" style="float: left;margin-left: 20px;height:auto;">
        <h3 style="background-color: rgb(224, 224, 224);padding: 10px 30px;width: 1000px;">同社区下人物关系图&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;社区层级关系图</h3>

        <div style="margin-left: 20px;height:500px;width:900px;">
            <div id="main1" style="height:500px;width:450px;float: left"></div>
            <div id="main1_append" style="float: left;height:500px;width:450px;padding-top:130px;"></div>

        </div>


        <h3 style="background-color: rgb(224, 224, 224);padding: 10px 30px;width: 1000px;">全网络人物关系图</h3>

        <div id="main2" style="margin-left: 20px;height:600px;width:900px;"></div>

        <h3 style="background-color: rgb(224, 224, 224);padding: 10px 30px;width: 1000px;">参数控制人物关系图</h3>

        <div id="main3" style="margin-left: 20px;height:600px;width:900px;"></div>


    </div>



</div>

    <!-- 为ECharts准备一个具备大小（宽高）的Dom -->

    <!-- ECharts单文件引入 -->
    <script src="http://echarts.baidu.com/build/dist/echarts.js"></script>
    <script src="{% static 'js/jquery-2.1.0.js' %}"></script>

    <script src="{% static 'js/echarts.js' %}"></script>


    <script type="text/javascript">
        // 路径配置
        require.config({
            paths: {
                echarts: 'http://echarts.baidu.com/build/dist'
            }
        });

        require(
            [
                'echarts',
                'echarts/chart/force', // 使用柱状图就加载bar模块，按需加载
                'echarts/chart/tree'
            ],
        function (ec) {
            var myChart1 = ec.init(document.getElementById('main1'));
            var option1 = {
                title: {
                    text: name,
                    x: 'right',
                    y: 'bottom'
                },
                tooltip: {
                    trigger: 'item',
                    formatter: '{a} : {b}'
                },
                toolbox: {
                    show: true,
                    feature: {
                        restore: {show: true},
                        magicType: {show: true, type: ['force', 'chord']},
                        saveAsImage: {show: true}
                    }
                },
                legend: {
                    x: 'left',
                    data: ['本人', '朋友']
                },
                series: [
                    {
                        type: 'force',
                        name: "人物关系",
                        ribbonType: false,
                        categories: [
                            {
                                name: '本人'
                            },
                            {
                                name: '朋友'
                            }
                        ],
                        itemStyle: {
                            normal: {
                                label: {
                                    show: true,
                                    textStyle: {
                                        color: '#333'
                                    }
                                },
                                nodeStyle: {
                                    brushType: 'both',
                                    borderColor: 'rgba(255,215,0,0.4)',
                                    borderWidth: 1
                                },
                                linkStyle: {
                                    type: 'curve'
                                }
                            },
                            emphasis: {
                                label: {
                                    show: false
                                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE
                                },
                                nodeStyle: {
                                    //r: 30
                                },
                                linkStyle: {}
                            }
                        },
                        useWorker: false,
                        minRadius: 15,
                        maxRadius: 25,
                        gravity: 1.1,
                        scaling: 1.1,
                        roam: 'move',
                        nodes: [
                        ],
                        links: [
                            {#{source: '丽萨-乔布斯', target: '乔布斯'},#}
                            {#{source: '保罗-乔布斯', target: '乔布斯'},#}
                            {#{source: '克拉拉-乔布斯', target: '乔布斯', weight: 1, name: '母亲'},#}
                            {#{source: '劳伦-鲍威尔', target: '乔布斯', weight: 2},#}
                            {#{source: '史蒂夫-沃兹尼艾克', target: '乔布斯', weight: 3, name: '合伙人'},#}
                            {#{source: '奥巴马', target: '乔布斯', weight: 1},#}
                            {#{source: '比尔-盖茨', target: '乔布斯', weight: 6, name: '竞争对手'},#}
                            {#{source: '乔纳森-艾夫', target: '乔布斯', weight: 1, name: '爱将'},#}
                            {#{source: '蒂姆-库克', target: '乔布斯', weight: 1},#}
                            {#{source: '龙-韦恩', target: '乔布斯', weight: 1},#}
                            {#{source: '克拉拉-乔布斯', target: '保罗-乔布斯', weight: 1},#}
                            {#{source: '奥巴马', target: '保罗-乔布斯', weight: 1},#}
                            {#{source: '奥巴马', target: '克拉拉-乔布斯', weight: 1},#}
                            {#{source: '奥巴马', target: '劳伦-鲍威尔', weight: 1},#}
                            {#{source: '奥巴马', target: '史蒂夫-沃兹尼艾克', weight: 1},#}
                            {#{source: '比尔-盖茨', target: '奥巴马', weight: 6},#}
                            {#{source: '比尔-盖茨', target: '克拉拉-乔布斯', weight: 1},#}
                            {#{source: '蒂姆-库克', target: '奥巴马', weight: 1}#}
                        ]
                    }
                ]
            };

            {#var temp = "'" + {{ name }} + "'";#}
            console.log(typeof name)
            $.ajax({
                type:"POST",
                dataType:"json",
                url:"{% url 'socialNetworkCode:gn_part' name %}",
                {#url:"{% url 'socialNetworkCode:gn_part' "MmeMagloire" %}",#}
                success:function(data){
                    console.log(data)
                    var length = data.length;
                    var friends = data[length-1].friends;
                    for(var i = 0;i<friends.length;i++){
                        var node = {};
                        //console.log(friends[i])
                        if(friends[i] == data[0].name){
                            node = {category: 0, name: friends[i], value: 10};

                        }else{
                            node = {category: 1, name: friends[i], value: 5};

                        }
                        option1.series[0].nodes.push(node);
                    }

                    var length = data.length-2 ;
                    var pair = 0;
                    for(var i = 1;i<length;i++){
                        var list = {source:data[i]["source"+pair],target:data[++i]["target"+pair],weight:1};
                        pair++;
                        option1.series[0].links.push(list);

                    }
                    console.log(option1)

                    var ecConfig = require('echarts/config');
                    function focus(param) {
                        var data = param.data;
                        var links = option1.series[0].links;
                        var nodes = option1.series[0].nodes;
                        if (
                            data.source !== undefined
                            && data.target !== undefined
                        ) { //点击的是边
                            var sourceNode = nodes.filter(function (n) {return n.name == data.source})[0];
                            var targetNode = nodes.filter(function (n) {return n.name == data.target})[0];
                            {#console.log("选中了边 " + sourceNode.name + ' -> ' + targetNode.name + ' (' + data.weight + ')');#}
                        } else { // 点击的是点
                            {#console.log("选中了" + data.name + '(' + data.value + ')');#}
                        }
                    }
                    myChart1.on(ecConfig.EVENT.CLICK, focus)

                    myChart1.on(ecConfig.EVENT.FORCE_LAYOUT_END, function () {
                        console.log(myChart1.chart.force.getPosition());
                    });
                    // 为echarts对象加载数据
                    myChart1.setOption(option1);


                    var spread = data[data.length-2]["maxspread"];
                    var count = data[data.length-2]["maxcount"];
                    console.log(spread + count)

                    //数据分析
                    $("#spread").html("影响力最大:" + spread);
                    $("#spread_num").html("影响因子:" + count);

                    $("#sort").html();
                    $("#part").html();
                    $("#gn").html();


                }
            });


             //main1_append start
            var myChart11 = ec.init(document.getElementById('main1_append'));

            var data = {
                "name": "Myriel",
                "value":4116,
                "children": [
                    {
                        "name": "MmeMagloire",
                    },
                    {
                        "name": "",
                        "children": [
                            {"name": "Napoleon", "value": 4116},
                            {"name": "CountessDeLo", "value": 4116},
                            {"name": "Geborand", "value": 4116},
                            {"name": "Champtercier", "value": 4116},
                            {"name": "Cravatte", "value": 4116},
                            {"name": "Count", "value": 4116},
                            {"name": "OldMan", "value": 4116},
                        ]
                    },

                    {
                        "name": "MlleBaptistine",

                    }
                ]
            };

            //myChart11.util.each(data.children, function (datum, index) {
            //    index % 2 === 0 && (datum.collapsed = true);
            //});

            myChart11.setOption(option = {
                tooltip: {
                    trigger: 'item',
                    triggerOn: 'mousemove'
                },
                {#legend: {#}
                {#        top: '2%',#}
                {#        left: '3%',#}
                {#        orient: 'vertical',#}
                {#        data: [#}
                {#        {#}
                {#            name: 'level',#}
                {#            icon: 'rectangle'#}
                {#        }],#}
                {#        borderColor: '#35b5c2'#}
                {#    },#}
                series:[
                    {
                        type: 'tree',
                        name: 'level',
                        data: [data],

                        top: '1%',
                        left: '7%',
                        bottom: '1%',
                        right: '20%',
                        height:'70%',

                        symbolSize: 7,

                        label: {
                            normal: {
                                position: 'left',
                                verticalAlign: 'middle',
                                align: 'right',
                                fontSize: 9
                            }
                        },

                        leaves: {
                            label: {
                                normal: {
                                    position: 'right',
                                    verticalAlign: 'middle',
                                    align: 'left'
                                }
                            }
                        },

                        expandAndCollapse: true,

                        animationDuration: 550,
                        animationDurationUpdate: 750
        }
    ]
});


            // 为echarts对象加载数据
            //myChart1.setOption(option1);

            //chart2 start

            // 基于准备好的dom，初始化echarts图表   MmeMagloire


            var myChart = ec.init(document.getElementById('main2'));


            var option = {
                     title : {
                    // text: '人物关系：乔布斯',
                    // subtext: '数据来自人立方',
                    x:'right',
                    y:'bottom'
                },
                    tooltip : {
                        trigger: 'item',
                        formatter: '{a} : {b}'
                    },
                    toolbox: {
                        show : true,
                        feature : {
                            restore : {show: true},
                            magicType: {show: true, type: ['force', 'chord']},
                            saveAsImage : {show: true}
                        }
                    },
                    legend: {
                        x: 'left',
                        data:['c0','c1','c2','c3','c4','c5','c6']
                    },
                    series : [
                        {
                            type:'force',
                            name : "人物关系",
                            ribbonType: false,
                            categories : [
                                {
                                    name: 'c0'
                                },
                                {
                                    name: 'c1'
                                },
                                {
                                    name: 'c2'
                                },
                                {
                                    name: 'c3'
                                },
                                {
                                    name: 'c4'
                                },
                                {
                                    name: 'c5'
                                },
                                {
                                    name: 'c6'
                                }
                            ],
                            itemStyle: {
                                normal: {
                                    label: {
                                        show: true,
                                        textStyle: {
                                            color: '#333'
                                        }
                                    },
                                    nodeStyle : {
                                        brushType : 'both',
                                        borderColor : 'rgba(255,215,0,0.4)',
                                        borderWidth : 1
                                    },
                                    linkStyle: {
                                        type: 'curve'
                                    }
                                },
                                emphasis: {
                                    label: {
                                        show: false
                                        // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE
                                    },
                                    nodeStyle : {
                                        //r: 30
                                    },
                                    linkStyle : {}
                                }
                            },
                            useWorker: false,
                            minRadius : 15,
                            maxRadius : 25,
                            gravity: 1.1,
                            scaling: 1.1,
                            roam: 'move',
                            nodes:[
                                {category:0, name: '305142'},
                                {category:0, name: '5494771351'},
                                {category:0, name: '1786765390'},
                                {category:0, name: '3439746044'},

                                {category:1, name: '5194924395'},
                                {category:1, name: '3740408065'},
                                {category:1, name: '3542512733'},
                                {category:1, name: '5012576846'},
                                {category:1, name: '5529434997'},
                                {category:1, name: '2013308075'},

                                {category:2, name: '5502134977'},

                                {category:3, name: '6615486306'},
                                {category:3, name: '6744860471'},
                                {category:3, name: '5629072572'},
                                {category:3, name: '6816672518'},
                                {category:3, name: '6874200356'},
                                {category:3, name: '6881116776'},

                                {category:4, name: '6148325595'},
                                {category:4, name: '6887070760'},
                                {category:4, name: '5708517202'},

                                {category:5, name: '6387006896'},
                                {category:5, name: '6364149230'},

                                {category:6, name: '6615268702'},
                                {category:6, name: '6473182874'},
                                {category:6, name: '6585190985'},
                                {category:6, name: '6591953768'},
                                {category:6, name: '6596404821'},
                                {category:6, name: '6589156261'},
                                {category:6, name: '6591987475'},
                                {category:6, name: '6452677799'},


                            ],
                            links : [
                                {source : '2013308075', target : '1786765390', weight : 1},
                                {source : '2013308075', target : '3542512733', weight : 8},
                                {source : '2013308075', target : '3740408065', weight : 10},
                                {source : '305142', target : '1786765390', weight : 6},
                                {source : '3439746044', target : '1786765390', weight : 1},
                                {source : '3439746044', target : '305142', weight : 1},
                                {source : '3542512733', target : '1786765390', weight : 1},
                                {source : '3542512733', target : '3740408065', weight : 1},
                                {source : '3542512733', target : '5012576846', weight : 2},
                                {source : '3542512733', target : '5529434997', weight : 1},
                                {source : '3740408065', target : '1786765390', weight : 1},
                                {source : '3740408065', target : '5194924395', weight : 3},
                                {source : '5012576846', target : '1786765390', weight : 3},
                                {source : '5012576846', target : '5194924395', weight : 5},
                                {source : '5012576846', target : '5529434997', weight : 1},
                                {source : '5194924395', target : '1786765390', weight : 1},
                                {source : '5194924395', target : '5529434997', weight : 1},
                                {source : '5494771351', target : '1786765390', weight : 1},
                                {source : '5502134977', target : '1786765390', weight : 4},
                                {source : '5529434997', target : '2013308075', weight : 4},
                                {source : '5629072572', target : '5529434997', weight : 4},
                                {source : '5629072572', target : '3439746044', weight : 4},
                                {source : '5629072572', target : '305142', weight : 4},
                                {source : '5629072572', target : '1786765390', weight : 4},
                                {source : '5708517202', target : '5629072572', weight : 3},
                                {source : '5708517202', target : '6148325595', weight : 3},
                                {source : '5708517202', target : '6364149230', weight : 1},
                                {source : '5708517202', target : '6887070760', weight : 1},
                                {source : '6148325595', target : '5629072572', weight : 1},
                                {source : '6148325595', target : '6744860471', weight : 1},
                                {source : '6148325595', target : '6887070760', weight : 1},
                                {source : '6364149230', target : '5629072572', weight : 1},
                                {source : '6364149230', target : '6881116776', weight : 1},
                                {source : '6387006896', target : '5629072572', weight : 1},
                                {source : '6364149230', target : '6387006896', weight : 1},
                                {source : '6473182874', target : '6452677799', weight : 1},
                                {source : '6585190985', target : '6452677799', weight : 1},
                                {source : '6585190985', target : '6473182874', weight : 1},
                                {source : '6589156261', target : '6452677799', weight : 1},
                                {source : '6589156261', target : '6473182874', weight : 1},
                                {source : '6589156261', target : '6585190985', weight : 1},
                                {source : '6591953768', target : '6452677799', weight : 1},
                                {source : '6591953768', target : '6473182874', weight : 1},
                                {source : '6591953768', target : '6585190985', weight : 1},
                                {source : '6591953768', target : '6589156261', weight : 1},
                                {source : '6591987475', target : '6452677799', weight : 1},
                                {source : '6591987475', target : '6473182874', weight : 1},
                                {source : '6591987475', target : '6585190985', weight : 1},
                                {source : '6591987475', target : '6589156261', weight : 1},
                                {source : '6591987475', target : '6591953768', weight : 1},
                                {source : '6596404821', target : '6452677799', weight : 1},
                                {source : '6596404821', target : '6473182874', weight : 1},
                                {source : '6596404821', target : '6585190985', weight : 1},
                                {source : '6596404821', target : '6589156261', weight : 1},
                                {source : '6596404821', target : '6591953768', weight : 1},
                                {source : '6596404821', target : '6591987475', weight : 1},
                                {source : '6615268702', target : '6452677799', weight : 1},
                                {source : '6615268702', target : '6473182874', weight : 1},
                                {source : '6615268702', target : '6585190985', weight : 1},
                                {source : '6615268702', target : '6589156261', weight : 1},
                                {source : '6615268702', target : '6591953768', weight : 1},
                                {source : '6615268702', target : '6591987475', weight : 1},
                                {source : '6615268702', target : '6596404821', weight : 1},
                                {source : '6615268702', target : '5708517202', weight : 1},
                                {source : '6615268702', target : '5629072572', weight : 1},
                                {source : '6615486306', target : '6615268702', weight : 1},
                                {source : '6615486306', target : '5629072572', weight : 1},
                                {source : '6744860471', target : '6615486306', weight : 1},
                                {source : '6744860471', target : '6615268702', weight : 1},
                                {source : '6744860471', target : '5629072572', weight : 1},
                                {source : '6816672518', target : '6615486306', weight : 1},
                                {source : '6816672518', target : '5629072572', weight : 1},
                                {source : '6816672518', target : '6452677799', weight : 1},
                                {source : '6816672518', target : '6744860471', weight : 1},
                                {source : '6874200356', target : '5629072572', weight : 1},
                                {source : '6874200356', target : '6615268702', weight : 1},
                                {source : '6874200356', target : '6744860471', weight : 1},
                                {source : '6874200356', target : '6615486306', weight : 1},
                                {source : '6874200356', target : '6816672518', weight : 1},
                                {source : '6881116776', target : '5629072572', weight : 1},
                                {source : '6881116776', target : '6874200356', weight : 1},
                                {source : '6887070760', target : '6615268702', weight : 1},
                                {source : '6887070760', target : '6874200356', weight : 1},
                                {source : '6887070760', target : '5629072572', weight : 1},

                            ]
                        }
                    ]
                };

            var ecConfig = require('echarts/config');

            function focus2(param) {
                var data = param.data;
                var links = option.series[0].links;
                var nodes = option.series[0].nodes;
                if (
                    data.source !== undefined
                    && data.target !== undefined
                ) { //点击的是边
                    var sourceNode = nodes.filter(function (n) {return n.name == data.source})[0];
                    var targetNode = nodes.filter(function (n) {return n.name == data.target})[0];
                    console.log("选中了边 " + sourceNode.name + ' -> ' + targetNode.name + ' (' + data.weight + ')');
                } else { // 点击的是点
                    console.log("选中了" + data.name + '(' + data.value + ')');
                }
                }
            myChart.on(ecConfig.EVENT.CLICK, focus2)

            myChart.on(ecConfig.EVENT.FORCE_LAYOUT_END, function () {
            console.log(myChart.chart.force.getPosition());
            });

            // 为echarts对象加载数据
            myChart.setOption(option);

            $("#all_modul").html("最大模块度:" + 0.47);
            $("#gn_num").html("最优社区数量:20");
            //chart2 end

        }
        );



    </script>
    <script type="text/javascript">
        function selectParam(select){
            console.log(select);
            $.ajax({
                type:'POST',
                dataType:"json",
                url:"{% url 'socialNetworkCode:param_gender' "MmeMagloire" %}?select=" + select,
                success:function(data) {
                    console.log(data)

                    // 路径配置
                    require.config({
                        paths: {
                            echarts: 'http://echarts.baidu.com/build/dist'
                        }
                    });

                    require(
                        [
                            'echarts',
                            'echarts/chart/force' // 使用柱状图就加载bar模块，按需加载
                        ],
                        function (ec) {
                            var myChart2 = ec.init(document.getElementById('main3'));
                            var option2 = {
                                title: {
                                    text: name,
                                    x: 'right',
                                    y: 'bottom'
                                },
                                tooltip: {
                                    trigger: 'item',
                                    formatter: '{a} : {b}'
                                },
                                toolbox: {
                                    show: true,
                                    feature: {
                                        restore: {show: true},
                                        magicType: {show: true, type: ['force', 'chord']},
                                        saveAsImage: {show: true}
                                    }
                                },
                                legend: {
                                    x: 'left',
                                    data: []
                                },
                                series: [
                                    {
                                        type: 'force',
                                        name: "人物关系",
                                        ribbonType: false,
                                        categories: [

                                        ],
                                        itemStyle: {
                                            normal: {
                                                label: {
                                                    show: true,
                                                    textStyle: {
                                                        color: '#333'
                                                    }
                                                },
                                                nodeStyle: {
                                                    brushType: 'both',
                                                    borderColor: 'rgba(255,215,0,0.4)',
                                                    borderWidth: 1
                                                },
                                                linkStyle: {
                                                    type: 'curve'
                                                }
                                            },
                                            emphasis: {
                                                label: {
                                                    show: false
                                                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE
                                                },
                                                nodeStyle: {
                                                    //r: 30
                                                },
                                                linkStyle: {}
                                            }
                                        },
                                        useWorker: false,
                                        minRadius: 15,
                                        maxRadius: 25,
                                        gravity: 1.1,
                                        scaling: 1.1,
                                        roam: 'move',
                                        nodes: [],
                                        links: [
                                            {#{source: '丽萨-乔布斯', target: '乔布斯'},#}
                                            {#{source: '保罗-乔布斯', target: '乔布斯'},#}
                                            {#{source: '克拉拉-乔布斯', target: '乔布斯', weight: 1, name: '母亲'},#}
                                            {#{source: '劳伦-鲍威尔', target: '乔布斯', weight: 2},#}
                                            {#{source: '史蒂夫-沃兹尼艾克', target: '乔布斯', weight: 3, name: '合伙人'},#}
                                            {#{source: '奥巴马', target: '乔布斯', weight: 1},#}
                                            {#{source: '比尔-盖茨', target: '乔布斯', weight: 6, name: '竞争对手'},#}
                                            {#{source: '乔纳森-艾夫', target: '乔布斯', weight: 1, name: '爱将'},#}
                                            {#{source: '蒂姆-库克', target: '乔布斯', weight: 1},#}
                                            {#{source: '龙-韦恩', target: '乔布斯', weight: 1},#}
                                            {#{source: '克拉拉-乔布斯', target: '保罗-乔布斯', weight: 1},#}
                                            {#{source: '奥巴马', target: '保罗-乔布斯', weight: 1},#}
                                            {#{source: '奥巴马', target: '克拉拉-乔布斯', weight: 1},#}
                                            {#{source: '奥巴马', target: '劳伦-鲍威尔', weight: 1},#}
                                            {#{source: '奥巴马', target: '史蒂夫-沃兹尼艾克', weight: 1},#}
                                            {#{source: '比尔-盖茨', target: '奥巴马', weight: 6},#}
                                            {#{source: '比尔-盖茨', target: '克拉拉-乔布斯', weight: 1},#}
                                            {#{source: '蒂姆-库克', target: '奥巴马', weight: 1}#}
                                        ]
                                    }
                                ]
                            };

                            {#var temp = "MmeMagloire";#}

                            var communication = data[0]['communication'];
                            var length = communication.length;
                            console.log(length);
                            for(var i = 0;i<length;i++){

                                option2.legend.data.push('c' + i);

                                var temp = communication[i];
                                for(var j = 0;j<temp.length;j++){
                                    var node = {category:i, name: temp[j]};
                                    option2.series[0].nodes.push(node);
                                }

                                var ca = {name : 'c' + i};
                                option2.series[0].categories.push(ca);
                            }

                            var edge = data[1]['edge'];
                            for(var i=0;i<edge.length;i++){
                                var temp = {source:edge[i][0],target:edge[i][1] ,weight:6};
                                option2.series[0].links.push(temp);

                            }

                            console.log(option2);
                            myChart2.setOption(option2);

                            //
                            var maxQ = data[2]['maxQ'];

                            $("#param_modul").html("最大模块度:" + maxQ.toFixed(2));

                            $("#param_gn_num").html("最优社区数量:" + length);

                        })


                }
            });


            return false;
        }

    </script>
    </body>
</html>